# Update via
# bazel mod deps --lockfile_mode=update
# --lockfile_mode=refresh refreshes mutable fields
# Test via
# bazel mod deps --lockfile_mode=error
#
# See https://bazel.build/external/lockfile for more info
module(name="mchristen", version="")

bazel_dep(name = "aspect_rules_py", version = "0.7.3")

# Minimum version needs:
# feat: add interpreter_version_info to py_runtime by @mattem in #1671
bazel_dep(name = "rules_python", dev_dependency = True, version = "0.29.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
# Must match interpreter_version in .bazelrc
# LINK(7e463bc3_e4d9_4464_ba39_3217c4a86004)
PYTHON_VERSION = "3.11"
python.toolchain(
    configure_coverage_tool = True,
    python_version = PYTHON_VERSION,
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = PYTHON_VERSION,
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "pip")

bazel_dep(name = "protobuf", version = "26.0")

bazel_dep(name = "rules_rust", version = "0.45.1")

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    versions = ["1.70.2"],
)
use_repo(rust, "rust_toolchains")
register_toolchains("@rust_toolchains//:all")

crate = use_extension(
    "@rules_rust//crate_universe:extension.bzl",
    "crate",
)
crate.from_cargo(
    name = "crate_index",
    cargo_lockfile = "//:Cargo.lock",
    # XXX: What about this one?
    # lockfile = "//:cargo-bazel-lock.json",
    manifests = [
        # "//:Cargo.toml",
        "//:examples/basic/Cargo.toml",
    ],
)
use_repo(crate, "crate_index")
