name: Build and Test
run-name: ${{ github.actor }} is building and testing ${{ github.repository }}
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was triggered by a ${{ github.event_name }} event, running on ${{ runner.os }}, ${{ github.ref }} @ ${{ github.repository }}."
      - uses: actions/checkout@v4
      - name: Cache Bazel
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.cache/bazelisk
            ~/.cache/bazel
          # key: ${{ runner.os }}-bazel
          # Add .bazelrc, .bazelversion, MODULE.bazel, possibly other
          # dependencies too
          # Or should we just setup remote caching more fully?
          key: bazel-${{ hashFiles('WORKSPACE') }}
          # An ordered list of prefix-matched keys to use for restoring stale cache if no cache hit occurred for key.
          restore-keys: |
            bazel-
      - name: Lint
        run: |
          ./lint.sh --mode check
      - name: Build
        run: |
          bazel build //...
      - name: Test
        run: |
          bazel test //...
          # XXX: Add all files via a find command and generation
          # XXX: Should we test in addition / segregate some?
          # XXX: Should we test in different modes?
          # XXX: Should we add instrumentation_filter to .bazelrc?
      - name: Coverage
        run: |
          bazel coverage //... --combined_report=lcov --instrument_test_targets --instrumentation_filter="^//"
          # XXX: Do we need to install lcov?
          # Remove external/ sources: https://manpages.debian.org/unstable/lcov/lcov.1.en.html
          lcov --remove "$(bazel info output_path)/_coverage/_coverage_report.dat" 'external*' -o coverage.dat
          genhtml --legend --highlight --branch-coverage --output genhtml coverage.dat
      # See https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/storing-workflow-data-as-artifacts
      - name: Archive coverage.dat
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage.dat
      - name: Archive genhtml
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-html
          path: genhtml
      # Try out https://app.codecov.io/ or
      # https://github.com/marketplace/actions/report-lcov and ensure min
      # coverage is met
      - run: echo "Status is ${{ job.status }}."
